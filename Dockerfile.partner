# Build stage
FROM node:18-alpine as builder

# Enable Corepack and set correct Yarn version
RUN corepack enable
RUN corepack prepare yarn@4.4.1 --activate

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json yarn.lock ./
COPY .yarnrc.yml ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy source code
COPY . .

# Build the partner application
RUN yarn build:partner

# Production stage
FROM nginx:alpine

# Copy built files to nginx
COPY --from=builder /app/dist/apps/partner /usr/share/nginx/html

# Create nginx configuration for Partner (no admin prefix)
RUN echo 'server { \
    listen 3002; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # Handle all routes \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    # Handle static assets \
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ { \
        expires 1y; \
        add_header Cache-Control "public, immutable"; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Copy entrypoint script for Partner
COPY docker-entrypoint-partner.sh /usr/local/bin/docker-entrypoint-partner.sh
RUN chmod +x /usr/local/bin/docker-entrypoint-partner.sh

# Expose port 3002
EXPOSE 3002

# Use entrypoint script
ENTRYPOINT ["/usr/local/bin/docker-entrypoint-partner.sh"] 